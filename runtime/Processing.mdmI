/// Processing implementierung kann nur von anwendbaren funktionen der runtime abh√§ngen oder wenn es kompiliert wird vom maschinencode
/// e.g. durch 'C++'

(first; second), ( 'if(first==second) return true;' ), eq /// xor oder ein assembler befehl bei: 0 is 1
(first; second), ( 'return (first && second);' ), and /// (bool)
(first; second), ( 'return (first || second);' ), or /// (bool)
(first), ( 'return !first;' ), not /// (bool)
(reference), ( 'return &reference;' ), is
(first; second), ( 'return (first+second);' ), add
(first; second), ( 'return (first-second);' ), sub
(first; second), ( 'return (first*second);' ), mul
(first; second), ( 'return (first/second);' ), div
(first; second), ( 'return pow(first, second);' ), pow
(first), ( 'return sqrt(first);' ), sqrt
(first), ( 'return log(first);' ), log
(command), ( 'system(command);' ), systemCall
(functionName; parameters), ( 'return functionName(parameters);' ), callExternalFunction
(string6), ( 'std::cout << string6 << std::endl;'), print 